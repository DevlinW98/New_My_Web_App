@model IEnumerable<WebApplication1.Models.Post>

@section Styles {
    <link rel="stylesheet" href="~/css/card-pop.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com"> 
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Mukta:wght@200;300;400;500;600;700;800&display=swap" rel="stylesheet">
}

@{
    var Id = ViewBag.Id;
    var userStatus = ViewBag.UserStatus;
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var requestJoinButtons = document.querySelectorAll('.request-join');
            for (var i = 0; i < requestJoinButtons.length; i++) {
                requestJoinButtons[i].addEventListener('click', function() {
                    var postId = this.getAttribute('data-post-id');
                    
                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', '/Home/RequestJoin', true);
                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                var response = JSON.parse(xhr.responseText);
                                if (response.success) {
                                    alert(response.message);
                                    var buttons = document.querySelectorAll('.request-join[data-post-id="' + postId + '"]');
                                    for (var j = 0; j < buttons.length; j++) {
                                        buttons[j].disabled = true;
                                        buttons[j].textContent = 'Request Sent';
                                    }
                                } else {
                                    alert(response.message || 'Something went wrong.');
                                }
                            } else {
                                console.error(xhr.responseText);
                                alert("An error occurred while sending your request.");
                            }
                        }
                    };
                    xhr.send('postId=' + encodeURIComponent(postId));
                });
            }

            // Comment system functionality
            function scrollToBottomOfComments(postId) {
                var commentSection = document.querySelector('.showcomment[data-post-id="' + postId + '"]');
                commentSection.scrollTop = commentSection.scrollHeight;
            }

            var commentSections = document.querySelectorAll('.showcomment');
            for (var i = 0; i < commentSections.length; i++) {
                var postId = commentSections[i].getAttribute('data-post-id');
                scrollToBottomOfComments(postId);
            }

            var commentForms = document.querySelectorAll('.pop-comment form');
            for (var i = 0; i < commentForms.length; i++) {
                commentForms[i].addEventListener('submit', function(e) {
                    e.preventDefault();

                    var form = this;
                    var actionUrl = form.getAttribute('action');
                    var postId = form.getAttribute('data-post-id');
                    var commentText = form.querySelector('input[name="CommentText"]').value;

                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', actionUrl, true);
                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                var response = JSON.parse(xhr.responseText);
                                if (response.success) {
                                    var commentSection = document.querySelector('.showcomment[data-post-id="' + postId + '"]');
                                    var noCommentsMessage = commentSection.querySelector('.no-comments-message');

                                    if (noCommentsMessage) {
                                        noCommentsMessage.remove();
                                    }

                                    var newComment = document.createElement('div');
                                    newComment.className = 'comment-post';
                                    newComment.innerHTML = '<p class="comment-user">' + response.username + ':</p>' +
                                                           '<p class="comment-description">' + response.comment.commentText + '</p>';
                                    commentSection.appendChild(newComment);
                                    form.querySelector('input[name="CommentText"]').value = '';
                                    scrollToBottomOfComments(postId);

                                    refreshComments(postId);
                                } else {
                                    console.error("Response not successful:", response);
                                }
                            } else {
                                console.error(xhr.responseText);
                                alert("An error occurred while submitting your comment.");
                            }
                        }
                    };
                    xhr.send('CommentText=' + encodeURIComponent(commentText) + '&id=' + encodeURIComponent(postId));
                });
            }

            function refreshComments(postId) {
                var xhr = new XMLHttpRequest();
                xhr.open('GET', '/Home/GetComments/' + encodeURIComponent(postId), true);
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            var commentSection = document.querySelector('.showcomment[data-post-id="' + postId + '"]');
                            commentSection.innerHTML = xhr.responseText;
                        } else {
                            console.error("Error refreshing comments:", xhr.responseText);
                        }
                    }
                };
                xhr.send();
            }

            setInterval(function() {
                var commentSections = document.querySelectorAll('.showcomment');
                for (var i = 0; i < commentSections.length; i++) {
                    var postId = commentSections[i].getAttribute('data-post-id');
                    refreshComments(postId);
                }
            }, 5000);
        });
    </script>
}


<div class="content-Comunity">
    @foreach (var myjoin in ViewBag.myjoin) {
        @foreach (var post in Model) {
            @if(myjoin.Post_ID == post.ID){
                <div class="card">
                <a href="#popup-@post.ID" class="card-link">
                    <img src="@post.Post_img" alt="Board game image">
                    <h3 class="Location">@post.Post_name</h3>
                    <h3 class="user">@(ViewBag.Usernames.ContainsKey(post.Post_by_id) ? ViewBag.Usernames[post.Post_by_id] : "Unknown User")</h3>
                    <p>Date : @post.Date</p>
                    <p>Amount : @post.Participants / @post.Capacity</p>
                </a>
                <a class="button" href="#popup-@post.ID">View more</a>
            </div>
            
            <div id="popup-@post.ID" class="overlay">
                <div class="popup">
                    <a class="close" href="#">&times;</a>
                    <div class="pop-content">
                        <div class="pop-image">
                            <img src="@post.Post_img" alt="Post Image">
                        </div>
                        <div class="pop-details">
                            <h2>Post Name: @post.Post_name</h2>
                            <h3>Post user : @(ViewBag.Usernames.ContainsKey(post.Post_by_id) ? ViewBag.Usernames[post.Post_by_id] : "Unknown User")</h3>
                            <p>Location : @post.Location</p>
                            <p>Date : @post.Date</p> 
                            <p>Amount : @post.Participants / @post.Capacity</p>
                            <p>@post.Post_Detail</p>
                        </div>
                        @if(Id == post.Post_by_id){
                            <div class="buttnozone">
                                <a asp-controller="Post" asp-action="Edit" asp-route-id="@post.ID" class="view-button">Edit</a>
                                <a asp-controller="Post" asp-action="Manage_Participants" asp-route-id="@post.ID" class="view-button">Manage</a>
                            </div>
                        }else{
                            <div class="buttnozone">
                                <form asp-controller="Community" asp-action="Out" method="post">
                                    <input type="hidden" name="id" value="@post.ID" />
                                    <button type="submit" class="view-button">Out</button>
                                </form>
                            </div>
                        }
                    </div>

                    <div class="showcomment" data-post-id="@post.ID">
                        @{
                            var comments = ViewBag.Comments as IEnumerable<WebApplication1.Models.Comment>;
                        }
                        @if (comments != null && comments.Any(c => c.PostID == post.ID))
                        {
                            foreach (var comment in comments.Where(c => c.PostID == post.ID).OrderBy(c => c.CreatedAt))
                            {
                                <div class="comment-post">
                                    <p class="comment-user">@(ViewBag.Usernames.ContainsKey(comment.UserID) ? ViewBag.Usernames[comment.UserID] : "Unknown User") :</p>
                                    <p class="comment-description">@comment.CommentText</p>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="no-comments-message">No comments yet.</p>
                        }
                    </div>

                    <div class="pop-comment">
                        <form method="post" asp-controller="Community" asp-action="CreateComment" data-post-id="@post.ID">
                            <input type="text" name="CommentText" placeholder="Leave a comment..." >
                            <button type="submit">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
            }
        }
        
    }
    
</div>